// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package soundex.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

/**
 * Implements the Soundex algorithm.
 * 
 * https://en.wikipedia.org/wiki/Soundex
 */
public class Soundex extends CustomJavaAction<java.lang.String>
{
	private java.lang.String Input;

	public Soundex(IContext context, java.lang.String Input)
	{
		super(context);
		this.Input = Input;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		if (this.Input == null) return "0000";

		return getCode(this.Input);
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "Soundex";
	}

	// BEGIN EXTRA CODE
	public static String getCode(String s) 
	{
		char[] x = s.toUpperCase().toCharArray();
		
		
		char firstLetter = x[0];
	
		//RULE [ 2 ]
		//Convert letters to numeric code
		for (int i = 0; i < x.length; i++) {
			switch (x[i]) {
				case 'B':
				case 'F':
				case 'P':
				case 'V': {
					x[i] = '1';
					break;
				}
			
				case 'C':
				case 'G':
				case 'J':
				case 'K':
				case 'Q':
				case 'S':
				case 'X':
				case 'Z': {
					x[i] = '2';
					break;
				}
			
				case 'D':
				case 'T': {
					x[i] = '3';
					break;
				}
			
				case 'L': {
					x[i] = '4';
					break;
				}
			
				case 'M':
				case 'N': {
					x[i] = '5';
					break;
				}
			
				case 'R': {
					x[i] = '6';
					break;
				}
			
				default: {
					x[i] = '0';
					break;
				}
			}
		}
	
		//Remove duplicates
		//RULE [ 1 ]
		String output = "" + firstLetter;
		
		//RULE [ 3 ]
		for (int i = 1; i < x.length; i++)
		if (x[i] != x[i - 1] && x[i] != '0')
			output += x[i];
	
		//RULE [ 4 ]
		//Pad with 0's or truncate
		output = output + "0000";
		return output.substring(0, 4);
	}
	// END EXTRA CODE
}
